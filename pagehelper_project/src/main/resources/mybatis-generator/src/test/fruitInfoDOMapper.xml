<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="test.fruitInfoDOMapper" >
  <resultMap id="BaseResultMap" type="test.fruitInfoDO" >
    <id column="fruit_id" property="fruitId" jdbcType="INTEGER" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="image2" property="image2" jdbcType="VARCHAR" />
    <result column="image3" property="image3" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="sales" property="sales" jdbcType="INTEGER" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Criteria_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fruit_id, image, image2, image3, title, description, price, sales, stock
  </sql>
  <select id="selectByCriteria" resultMap="BaseResultMap" parameterType="test.fruitInfoDOCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fruit_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fruit_info
    where fruit_id = #{fruitId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fruit_info
    where fruit_id = #{fruitId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCriteria" parameterType="test.fruitInfoDOCriteria" >
    delete from fruit_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="test.fruitInfoDO" >
    insert into fruit_info (fruit_id, image, image2, 
      image3, title, description, 
      price, sales, stock
      )
    values (#{fruitId,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, #{image2,jdbcType=VARCHAR}, 
      #{image3,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{sales,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="test.fruitInfoDO" >
    insert into fruit_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fruitId != null" >
        fruit_id,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="image2 != null" >
        image2,
      </if>
      <if test="image3 != null" >
        image3,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="sales != null" >
        sales,
      </if>
      <if test="stock != null" >
        stock,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fruitId != null" >
        #{fruitId,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="image2 != null" >
        #{image2,jdbcType=VARCHAR},
      </if>
      <if test="image3 != null" >
        #{image3,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="sales != null" >
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByCriteria" parameterType="test.fruitInfoDOCriteria" resultType="java.lang.Integer" >
    select count(*) from fruit_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriteriaSelective" parameterType="map" >
    update fruit_info
    <set >
      <if test="record.fruitId != null" >
        fruit_id = #{record.fruitId,jdbcType=INTEGER},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.image2 != null" >
        image2 = #{record.image2,jdbcType=VARCHAR},
      </if>
      <if test="record.image3 != null" >
        image3 = #{record.image3,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.sales != null" >
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map" >
    update fruit_info
    set fruit_id = #{record.fruitId,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR},
      image2 = #{record.image2,jdbcType=VARCHAR},
      image3 = #{record.image3,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      sales = #{record.sales,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="test.fruitInfoDO" >
    update fruit_info
    <set >
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="image2 != null" >
        image2 = #{image2,jdbcType=VARCHAR},
      </if>
      <if test="image3 != null" >
        image3 = #{image3,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="sales != null" >
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
    </set>
    where fruit_id = #{fruitId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.fruitInfoDO" >
    update fruit_info
    set image = #{image,jdbcType=VARCHAR},
      image2 = #{image2,jdbcType=VARCHAR},
      image3 = #{image3,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      sales = #{sales,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER}
    where fruit_id = #{fruitId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="test.fruitInfoDOCriteria" id="selectByCriteriaWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fruit_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>