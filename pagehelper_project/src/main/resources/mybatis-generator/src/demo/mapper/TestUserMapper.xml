<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.dao.TestUserMapper">
  <resultMap id="BaseResultMap" type="demo.entity.TestUser">
    <id column="fruit_id" jdbcType="INTEGER" property="fruitId" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="image2" jdbcType="VARCHAR" property="image2" />
    <result column="image3" jdbcType="VARCHAR" property="image3" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Criteria_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    fruit_id, image, image2, image3, title, description, price, sales, stock
  </sql>
  <select id="selectByCriteria" parameterType="demo.entity.TestUserCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fruit_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fruit_info
    where fruit_id = #{fruitId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fruit_info
    where fruit_id = #{fruitId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCriteria" parameterType="demo.entity.TestUserCriteria">
    delete from fruit_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.entity.TestUser">
    insert into fruit_info (fruit_id, image, image2, 
      image3, title, description, 
      price, sales, stock
      )
    values (#{fruitId,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, #{image2,jdbcType=VARCHAR}, 
      #{image3,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{sales,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="demo.entity.TestUser">
    insert into fruit_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fruitId != null">
        fruit_id,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="image2 != null">
        image2,
      </if>
      <if test="image3 != null">
        image3,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="stock != null">
        stock,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fruitId != null">
        #{fruitId,jdbcType=INTEGER},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="image2 != null">
        #{image2,jdbcType=VARCHAR},
      </if>
      <if test="image3 != null">
        #{image3,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByCriteria" parameterType="demo.entity.TestUserCriteria" resultType="java.lang.Integer">
    select count(*) from fruit_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriteriaSelective" parameterType="map">
    update fruit_info
    <set>
      <if test="record.fruitId != null">
        fruit_id = #{record.fruitId,jdbcType=INTEGER},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.image2 != null">
        image2 = #{record.image2,jdbcType=VARCHAR},
      </if>
      <if test="record.image3 != null">
        image3 = #{record.image3,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map">
    update fruit_info
    set fruit_id = #{record.fruitId,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR},
      image2 = #{record.image2,jdbcType=VARCHAR},
      image3 = #{record.image3,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      sales = #{record.sales,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="demo.entity.TestUser">
    update fruit_info
    <set>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="image2 != null">
        image2 = #{image2,jdbcType=VARCHAR},
      </if>
      <if test="image3 != null">
        image3 = #{image3,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
    </set>
    where fruit_id = #{fruitId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="demo.entity.TestUser">
    update fruit_info
    set image = #{image,jdbcType=VARCHAR},
      image2 = #{image2,jdbcType=VARCHAR},
      image3 = #{image3,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      sales = #{sales,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER}
    where fruit_id = #{fruitId,jdbcType=INTEGER}
  </update>
  <select id="selectByCriteriaWithRowbounds" parameterType="demo.entity.TestUserCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fruit_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <resultMap id="BaseResultMap" type="demo.entity.TestUser">
    <result column="USER_ID" jdbcType="DECIMAL" property="userId" />
    <result column="USER_CODE" jdbcType="VARCHAR" property="userCode" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_AGE" jdbcType="DECIMAL" property="userAge" />
    <result column="USER_SEX" jdbcType="DECIMAL" property="userSex" />
    <result column="USER_TYPE" jdbcType="DECIMAL" property="userType" />
    <result column="REGION_ID" jdbcType="DECIMAL" property="regionId" />
    <result column="USER_STATE" jdbcType="DECIMAL" property="userState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Criteria_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USER_ID, USER_CODE, USER_NAME, USER_AGE, USER_SEX, USER_TYPE, REGION_ID, USER_STATE
  </sql>
  <select id="selectByCriteria" parameterType="demo.entity.TestUserCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TEST_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByCriteria" parameterType="demo.entity.TestUserCriteria">
    delete from TEST_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.entity.TestUser">
    insert into TEST_USER (USER_ID, USER_CODE, USER_NAME, 
      USER_AGE, USER_SEX, USER_TYPE, 
      REGION_ID, USER_STATE)
    values (#{userId,jdbcType=DECIMAL}, #{userCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userAge,jdbcType=DECIMAL}, #{userSex,jdbcType=DECIMAL}, #{userType,jdbcType=DECIMAL}, 
      #{regionId,jdbcType=DECIMAL}, #{userState,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="demo.entity.TestUser">
    insert into TEST_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userCode != null">
        USER_CODE,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="userAge != null">
        USER_AGE,
      </if>
      <if test="userSex != null">
        USER_SEX,
      </if>
      <if test="userType != null">
        USER_TYPE,
      </if>
      <if test="regionId != null">
        REGION_ID,
      </if>
      <if test="userState != null">
        USER_STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=DECIMAL},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null">
        #{userAge,jdbcType=DECIMAL},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=DECIMAL},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=DECIMAL},
      </if>
      <if test="regionId != null">
        #{regionId,jdbcType=DECIMAL},
      </if>
      <if test="userState != null">
        #{userState,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByCriteria" parameterType="demo.entity.TestUserCriteria" resultType="java.lang.Integer">
    select count(*) from TEST_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriteriaSelective" parameterType="map">
    update TEST_USER
    <set>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=DECIMAL},
      </if>
      <if test="record.userCode != null">
        USER_CODE = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userAge != null">
        USER_AGE = #{record.userAge,jdbcType=DECIMAL},
      </if>
      <if test="record.userSex != null">
        USER_SEX = #{record.userSex,jdbcType=DECIMAL},
      </if>
      <if test="record.userType != null">
        USER_TYPE = #{record.userType,jdbcType=DECIMAL},
      </if>
      <if test="record.regionId != null">
        REGION_ID = #{record.regionId,jdbcType=DECIMAL},
      </if>
      <if test="record.userState != null">
        USER_STATE = #{record.userState,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map">
    update TEST_USER
    set USER_ID = #{record.userId,jdbcType=DECIMAL},
      USER_CODE = #{record.userCode,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      USER_AGE = #{record.userAge,jdbcType=DECIMAL},
      USER_SEX = #{record.userSex,jdbcType=DECIMAL},
      USER_TYPE = #{record.userType,jdbcType=DECIMAL},
      REGION_ID = #{record.regionId,jdbcType=DECIMAL},
      USER_STATE = #{record.userState,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <select id="selectByCriteriaWithRowbounds" parameterType="demo.entity.TestUserCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TEST_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>